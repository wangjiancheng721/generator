package ${package.ServiceImpl};

import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};
import ${package.Service}.${table.serviceName};
import ${superServiceImplClassPackage};
import java.util.List;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.wjc.generator.entity.ResponseEntity;
import com.wjc.generator.util.ResponseUtil;

/**
 * <p>
 * $!{table.comment} 服务实现类
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Transactional
@Service
public class ${table.serviceImplName} extends ${superServiceImplClass}<${table.mapperName}, ${entity}> implements ${table.serviceName} {

    @Autowired
    private ${table.mapperName} ${table.entityName.toLowerCase()}Mapper;

    @Override
    public ResponseEntity<${entity}> get${table.entityName}List(${entity} ${table.entityName.toLowerCase()},Page page){
        ResponseEntity<${entity}> result = new ResponseEntity<${entity}>();
        QueryWrapper queryWrapper = new QueryWrapper(${table.entityName.toLowerCase()});
        page = ${table.entityName.toLowerCase()}Mapper.selectPage(page, queryWrapper);
        result = ResponseUtil.responseSuccess(page.getRecords());
        return result;

    }

    /**
    * 注意当前的id主键 是默认的"id"，具体情况根据数据库主键的名称进行修改
    */
    @Override
    public ResponseEntity<${entity}> get${table.entityName}ById(${entity} ${table.entityName.toLowerCase()}){
        ResponseEntity<${entity}> result = new ResponseEntity<${entity}>();
        QueryWrapper queryWrapper = new QueryWrapper(${table.entityName.toLowerCase()});
        ${table.entityName.toLowerCase()} = ${table.entityName.toLowerCase()}Mapper.selectOne(queryWrapper);
        result = ResponseUtil.responseSuccess(${table.entityName.toLowerCase()});
        return result;
    }

    @Override
    public ResponseEntity<${entity}> update${table.entityName}(${entity} ${table.entityName.toLowerCase()}){
        ResponseEntity<${entity}> result = new ResponseEntity<${entity}>();
        Integer count = ${table.entityName.toLowerCase()}Mapper.updateById(${table.entityName.toLowerCase()});
        result = ResponseUtil.responseSuccess(count);
        return result;
    }

    @Override
    public ResponseEntity<${entity}> insert${table.entityName}(${entity} ${table.entityName.toLowerCase()}){
        ResponseEntity<${entity}> result = new ResponseEntity<${entity}>();
        Integer count = ${table.entityName.toLowerCase()}Mapper.insert(${table.entityName.toLowerCase()});
        result = ResponseUtil.responseSuccess(count);
        return result;
    }

    @Override
    public ResponseEntity<${entity}> insertBatch(List<${entity}> ${table.entityName.toLowerCase()}s){
        ResponseEntity<${entity}> result = new ResponseEntity<${entity}>();
        Integer count = 0;
        for(${entity} ${table.entityName.toLowerCase()} : ${table.entityName.toLowerCase()}s){
            ${table.entityName.toLowerCase()}Mapper.insert(${table.entityName.toLowerCase()});
            count++;
        }
        result = ResponseUtil.responseSuccess(count);
        return result;
    }

    @Override
    public ResponseEntity<${entity}> delete${table.entityName}(${entity} ${table.entityName.toLowerCase()}){
        ResponseEntity<${entity}> result = new ResponseEntity<${entity}>();
        Integer count = ${table.entityName.toLowerCase()}Mapper.deleteById(${table.entityName.toLowerCase()});
        result = ResponseUtil.responseSuccess(count);
        return result;
    }

    @Override
    public  ResponseEntity<${entity}> delete${table.entityName}List(List<${entity}> ${table.entityName.toLowerCase()}s) {
        ResponseEntity<${entity}> result = new ResponseEntity<${entity}>();
        Integer count = ${table.entityName.toLowerCase()}Mapper.deleteBatchIds(${table.entityName.toLowerCase()}s);
        result = ResponseUtil.responseSuccess(count);
        return result;
    }
}
